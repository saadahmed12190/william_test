name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION : "eu-north-1"
  AWS_ACCOUNT_ID: 205984973098

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/github-assume-role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Building Images
        run: |
          docker-compose -f production.yml build
      
      - name: Pushing Traefik
        run: |
          ECR_REPOSITORY_NAME="mindtrade_traefik"
          LOCAL_TAG="templatebackend_production_traefik"
          IMAGE_TAG="latest"
          aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          docker tag $LOCAL_TAG:latest ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
      
      - name: Pushing Django
        run: |
          ECR_REPOSITORY_NAME="mindtrade_django"
          LOCAL_TAG="templatebackend_production_django"
          IMAGE_TAG="latest"
          aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          docker tag $LOCAL_TAG:latest ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
      
      - name: Pushing Celery Worker
        run: |
          ECR_REPOSITORY_NAME="mindtrade_celeryworker"
          LOCAL_TAG="templatebackend_production_celeryworker"
          IMAGE_TAG="latest"
          aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          docker tag $LOCAL_TAG:latest ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
      
      - name: Pushing Celery Beat
        run: |
          ECR_REPOSITORY_NAME="mindtrade_celerybeat"
          LOCAL_TAG="templatebackend_production_celerybeat"
          IMAGE_TAG="latest"
          aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
          docker tag $LOCAL_TAG:latest ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          docker push ${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG
