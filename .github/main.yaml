name: Deployyy to ECR

on:
 
  push:
    branches: [ master ]
permissions:
  id-token: write
  contents: read

jobs:
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Installing ECS deploy
      run: | 
         pip install ecs-deploy

   
    - name: Check out code
      uses: actions/checkout@v2

    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          role-to-assume: arn:aws:iam::205984973098:role/github-assume-role
          aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1



    - name: Build and push Docker images
      env:
        AWS_REGION: eu-north-1
      run: |
        docker-compose -f production.yml up


        
    # - name: Tag and Push
    #   env:
    #     ECR_REPOSITORY_FOR_CELERYBEAT: celerybeat
    #     TAG: ${{ github.run_number }}
    #     ACCOUNT_URL: 489994096722.dkr.ecr.us-east-1.amazonaws.com
    #   run: |
    #     docker tag $ECR_REPOSITORY:latest $ACCOUNT_URL/$ECR_REPOSITORY:$TAG
    #     docker push $ACCOUNT_URL/$ECR_REPOSITORY:$TAG


    # - name: Deploy Amazon ECS task definition
    #   env:
    #     ECR_REPOSITORY: saad
    #     ECS_CLUSTER: saad-ecs
    #     ECS_SERVICE: saad-test-service
    #     ECS_CONTAINER: saad-test-container
    #     REGION: us-east-1
    #     ACCOUNT_URL: 489994096722.dkr.ecr.us-east-1.amazonaws.com
    #     TAG: ${{ github.run_number }}
    #   run: |
    #     ecs deploy $ECS_CLUSTER $ECS_SERVICE --region $REGION --image $ECS_CONTAINER $ACCOUNT_URL/$ECR_REPOSITORY:$TAG
